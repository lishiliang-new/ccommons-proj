server.port=8888

spring.application.name=gateway

# eureka注册中心配置
#在springcloud中服务的 Instance ID 默认值是:${spring.cloud.client.hostname}:${spring.application.name}:${spring.application.instance_id:${server.port}}, 也就是：主机名：应用名：应用端口
eureka.client.service-url.defaultZone = http://localhost:8088/eureka/
eureka.instance.hostname= ${spring.cloud.client.ip-address}
eureka.instance.prefer-ip-address=true 
eureka.instance.instance-id=${spring.cloud.client.ip-address}:${server.port} 

# 多注册中心下 放弃eureka对ribbon服务列表的维护
#ribbon.eureka.enabled=false
# 多注册中心下 放弃nacos对ribbon服务列表的维护
# ribbon.nacos.enabled=false @see ConditionalOnRibbonNacos
# 处理请求的超时时间，默认为5秒
ribbon.ConnectTimeout=5000
# 连接建立的超时时长，默认5秒
ribbon.ReadTimeout=5000
# 同一台实例的最大重试次数，但是不包括首次调用，默认为1次
ribbon.MaxAutoRetries=1
#重试负载均衡其他实例的最大重试次数，不包括首次调用，默认为0次
ribbon.MaxAutoRetriesNextServer=1
#是否对所有操作都重试，默认false 总重试次数1+MaxAutoRetries+MaxAutoRetriesNextServer+(MaxAutoRetries *MaxAutoRetriesNextServer)
# 设置为false时，只会对get请求进行重试。如果设置为true，便会对所有的请求进行重试，如put或post等
ribbon.OkToRetryOnAllOperations=false
# 配合 ribbon.OkToRetryOnAllOperations=false 关闭重试
# spring.cloud.loadbalancer.retry.enabled=false


#表明gateway开启服务注册和发现的功能，并且spring cloud gateway自动根据服务发现为每一个服务创建了一个router，这个router将以服务名开头的请求路径转发到对应的服务。
#spring.cloud.gateway.discovery.locator.enabled=true
##是将请求路径上的服务名配置为小写（因为服务注册的时候，向注册中心注册时将服务名转成大写的了），比如以/service-hi/*的请求路径被路由转发到服务名为service-hi的服务上。
#spring.cloud.gateway.discovery.locator.lower-case-service-id=true
#spring.cloud.gateway.routes[0].id=gateway-elastic-job-facade-impl
##使用loadbalancer模式 需要 spring.cloud.gateway.discovery.locator.enabled=true 并且引入ribbon包
## lb模式下 服务名称不能有特殊字符 如("lb://xxx_")
#spring.cloud.gateway.routes[0].uri=lb://elastic-job-facade-impl
#spring.cloud.gateway.routes[0].predicates[0]=Path=/elastic-job-facade-impl/**
##去掉一层路径
#spring.cloud.gateway.routes[0].filters[0]=StripPrefix=1
#spring.cloud.gateway.routes[0].filters[1]=Trace



